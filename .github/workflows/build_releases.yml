# from https://raw.githubusercontent.com/ClementTsang/bottom/refs/heads/main/.github/workflows/build_releases.yml

# Builds the following releases:
# - Binaries
# - Binaries via VMs
# - .deb releases

name: "build releases"

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      caller:
        description: "The calling workflow."
        default: ""
        required: false
        type: string

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_HUSKY_DONT_INSTALL_HOOKS: true

permissions:
  id-token: write
  contents: read
  attestations: write

# TODO: Maybe add retry job in case of timeouts?
jobs:
  build-binaries:
    name: "Build binaries"
    runs-on: ${{ matrix.info.os }}
    container: ${{ matrix.info.container }}
    timeout-minutes: 12
    strategy:
      fail-fast: false
      matrix:
        info:
          # ======= Supported targets =======
          # Linux (x86-64, x86, aarch64)
          #
          # TODO: In the future, when ARM runners are available on github, switch ARM targets off of cross.
          - {
              os: "ubuntu-22.04",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              generate-other-artifacts: true,
            }
          - {
              os: "ubuntu-22.04",
              target: "i686-unknown-linux-gnu",
              cross: true,
            }
          - {
              os: "ubuntu-22.04",
              target: "x86_64-unknown-linux-musl",
              cross: true,
            }
          - {
              os: "ubuntu-22.04",
              target: "i686-unknown-linux-musl",
              cross: true,
            }
          - {
              os: "ubuntu-22.04",
              target: "aarch64-unknown-linux-gnu",
              cross: true,
            }
          - {
              os: "ubuntu-22.04",
              target: "aarch64-unknown-linux-musl",
              cross: true,
            }

          # ======= Unsupported targets =======
          # armv7
          - {
              os: "ubuntu-22.04",
              target: "armv7-unknown-linux-gnueabihf",
              cross: true,
            }
          - {
              os: "ubuntu-22.04",
              target: "armv7-unknown-linux-musleabihf",
              cross: true,
            }

          # PowerPC 64 LE
          - {
              os: "ubuntu-22.04",
              target: "powerpc64le-unknown-linux-gnu",
              cross: true,
            }

          # Risc-V 64gc
          - {
              os: "ubuntu-22.04",
              target: "riscv64gc-unknown-linux-gnu",
              cross: true,
            }

          # Seems like cross' FreeBSD image is a bit broken? I
          # get build errors, may be related to this issue:
          # https://github.com/cross-rs/cross/issues/1291
    steps:
      - name: Checkout repository
        if: matrix.info.container == ''
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1

      - name: Set up Rust toolchain
        if: matrix.info.container == ''
        uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17
        with:
          toolchain: ${{ matrix.info.rust || 'stable' }}
          target: ${{ matrix.info.target }}

      - name: Set up Rust toolchain (non-GitHub container)
        if: matrix.info.container != ''
        shell: bash
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs --output rustup.sh
          sh rustup.sh --default-toolchain stable -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build
        uses: ClementTsang/cargo-action@v0.0.5
        env:
          BTM_GENERATE: true
          BTM_BUILD_RELEASE_CALLER: ${{ inputs.caller }}
        with:
          command: build
          args: --release --verbose --locked --target=${{ matrix.info.target }}
          use-cross: ${{ matrix.info.cross }}
          cross-version: 0.2.5

      - name: Bundle release (Linux)
        if: matrix.info.os != 'windows-2022'
        shell: bash
        run: |
          cp target/${{ matrix.info.target }}/release/msmtp-retry ./msmtp-retry
          tar -czvf msmtp-retry_${{ matrix.info.target }}.tar.gz msmtp-retry
          echo "ASSET=msmtp-retry_${{ matrix.info.target }}.tar.gz" >> $GITHUB_ENV

      - name: Generate artifact attestation for file
        uses: actions/attest-build-provenance@6149ea5740be74af77f260b9db67e633f6b0a9a1 # v1.4.2
        with:
          subject-path: ${{ env.ASSET }}

      - name: Create release directory for artifact, move file
        shell: bash
        run: |
          mkdir release
          mv ${{ env.ASSET }} release/

      - name: Save release as artifact
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        with:
          retention-days: 3
          name: "release-${{ matrix.info.target }}"
          path: release

  build-deb:
    name: "Build .deb software packages"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 12
    strategy:
      fail-fast: false
      matrix:
        # TODO: In the future, when ARM runners are available on github, switch ARM targets off of cross.
        info:
          - { target: "x86_64-unknown-linux-gnu", dpkg: amd64 }
          - { target: "x86_64-unknown-linux-musl", cross: true, dpkg: amd64 }
          #- {
          #    target: "aarch64-unknown-linux-gnu",
          #    cross: true,
          #    dpkg: arm64,
          #    container: "ghcr.io/clementtsang/cargo-deb-aarch64-unknown-linux-gnu",
          #  }
          #- {
          #    target: "armv7-unknown-linux-gnueabihf",
          #    cross: true,
          #    dpkg: armhf,
          #    container: "ghcr.io/clementtsang/cargo-deb-armv7-unknown-linux-gnueabihf",
          #  }
          #- {
          #    target: "aarch64-unknown-linux-musl",
          #    cross: true,
          #    dpkg: arm64,
          #    container: "ghcr.io/clementtsang/cargo-deb-aarch64-unknown-linux-gnu",
          #  }
          #- {
          #    target: "armv7-unknown-linux-musleabihf",
          #    cross: true,
          #    dpkg: armhf,
          #    container: "ghcr.io/clementtsang/cargo-deb-armv7-unknown-linux-gnueabihf",
          #  }
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17
        with:
          toolchain: ${{ matrix.info.rust || 'stable' }}
          target: ${{ matrix.info.target }}

      # TODO: Could I use the previous jobs to skip this call?
      - name: Build
        uses: ClementTsang/cargo-action@v0.0.5
        env:
          BTM_GENERATE: true
          BTM_BUILD_RELEASE_CALLER: ${{ inputs.caller }}
        with:
          command: build
          args: --release --locked --verbose --target ${{ matrix.info.target }}
          use-cross: ${{ matrix.info.cross || false }}
          cross-version: 0.2.5

      - name: Build Debian release (x86-64)
        if: startsWith(matrix.info.target, 'x86_64')
        env:
          BTM_GENERATE: true
        run: |
          cargo install cargo-deb --version 2.5.1 --locked
          cargo deb --no-build --target ${{ matrix.info.target }}
          cp ./target/${{ matrix.info.target }}/debian/msmtp-retry_*.deb .

      - name: Build Debian release (ARM)
        if: startsWith(matrix.info.target, 'x86_64') != true
        env:
          BTM_GENERATE: true
        run: |
          docker pull ${{ matrix.info.container }}
          docker run -t --rm --mount type=bind,source="$(pwd)",target=/volume ${{ matrix.info.container }} "--no-build --variant ${{ matrix.info.dpkg }} --target ${{ matrix.info.target }}" "/volume"
          cp ./target/${{ matrix.info.target }}/debian/msmtp-retry-*.deb .
          TMP_NAME=$(find msmtp-retry-*.deb)
          VERSION=${{ matrix.info.dpkg }}
          mv $TMP_NAME $(echo $TMP_NAME | sed "s/-$VERSION//")

      - name: Rename if it is a musl target
        if: contains(matrix.info.target, 'musl')
        run: |
          TMP_NAME=$(find msmtp-retry_*.deb)
          mv $TMP_NAME $(echo $TMP_NAME | sed "s/msmtp-retry/msmtp-retry-musl/")

      # TODO: Maybe rename version if nightly?
      - name: Verify Debian release
        id: verify
        run: |
          DEB_FILE=$(find msmtp-retry*_*.deb)
          dpkg -I $DEB_FILE
          dpkg -I $DEB_FILE | grep ${{ matrix.info.dpkg }} && echo "Found correct architecture"
          echo "DEB_FILE=$DEB_FILE" >> $GITHUB_OUTPUT

      - name: Delete generated Debian folder
        run: |
          sudo chown $USER ./target/${{ matrix.info.target }}/debian/ 2>/dev/null || true
          rm -r ./target/${{ matrix.info.target }}/debian/

      - name: Generate artifact attestation for file
        uses: actions/attest-build-provenance@6149ea5740be74af77f260b9db67e633f6b0a9a1 # v1.4.2
        with:
          subject-path: ${{ steps.verify.outputs.DEB_FILE }}

      - name: Create release directory for artifact, move file
        shell: bash
        run: |
          mkdir release
          mv ${{ steps.verify.outputs.DEB_FILE }} release/

      - name: Save release as artifact
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        with:
          retention-days: 3
          name: release-build-deb-${{ matrix.info.target }}
          path: release
